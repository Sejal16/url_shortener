const express = require('express');
const userModel=require('../models/userModel')
const jwt = require('jsonwebtoken');
const jwt_key = require('../key');

// signup user
module.exports.signup = async function signup(req, res) {
    try {
        let dataObj = req.body;
        let user = await userModel.create(dataObj);
        // sendMail('signup',user)
        if (user) {
            return res.json({
                message: "User signed up",
                data: user
            });
        }
        else {
            res.json({
                message: "error while signup"
            });
        }
    }
    catch (err) {
        res.json({
            message: err.message
        })
    }
}

module.exports.login= async function login(req,res){
    try {
        let data = req.body;
        if (data.email) {
            let user = await userModel.findOne({ email: data.email })
            if (user) {
                // we will do the bcyrpt later
                if (data.password === user.password) {

                    let uid = user['_id']; //uid
                    let token = jwt.sign({ payload: uid }, jwt_key)
                    res.cookie('login', token, { httpOnly: true });
                    return res.json({
                        message: "User has logged in",
                        userDetails: user
                    })
                }
                else {
                    res.json({
                        message: "Wrong Credentials"
                    })
                }
            }

            else {
                res.json({
                    message: "user not found"
                })
            }
        }
        else {
            res.json({
                message: "user not found"
            })
        }
    }
    catch (err) {
        res.json({
            message: err.message
        })
    }
}
module.exports.logout=function logout(req,res){
    //1. First find the cookie named login 
    //   2. Override the cookie with blank space
    //   3. then destroy the cookie after 1 millisecond
    res.cookie('login',' ',{maxAge:1})
    res.json({
        message:"logged out"
    })

}